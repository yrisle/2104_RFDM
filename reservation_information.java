/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

package inquiry_info;



import javax.swing.JFrame;
import javax.swing.JOptionPane;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;



public class reservation_information extends javax.swing.JFrame {

    /**
     * Creates new form reservation_information
     */
    public reservation_information() {
        initComponents();
        loadData(); 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        emailc = new javax.swing.JTextField();
        agec = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        genderc = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        clients_table = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        namec = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(51, 51, 0));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("GENDER");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 280, -1, 20));

        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton1.setText("ENTER");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 330, -1, -1));

        emailc.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        emailc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailcActionPerformed(evt);
            }
        });
        getContentPane().add(emailc, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 190, 400, 30));

        agec.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        agec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agecActionPerformed(evt);
            }
        });
        getContentPane().add(agec, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 230, 400, 30));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("EMAIL");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 190, -1, 20));

        genderc.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        genderc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gendercActionPerformed(evt);
            }
        });
        getContentPane().add(genderc, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 270, 400, 30));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("AGE");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 240, -1, 20));

        clients_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Inquirer Name", "Email", "Age", "Gender"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        clients_table.setName(""); // NOI18N
        jScrollPane1.setViewportView(clients_table);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 70, 720, 440));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("INQUIRY");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 20, -1, -1));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("INQUIRER INFORMATION");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 110, -1, -1));

        namec.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        namec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                namecActionPerformed(evt);
            }
        });
        getContentPane().add(namec, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 150, 400, 30));

        jLabel7.setBackground(new java.awt.Color(255, 255, 255));
        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("NAME");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 150, -1, 20));

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inquiry_info/bg.png"))); // NOI18N
        jLabel2.setText("jLabel2");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(-20, 0, -1, -1));

        jLabel8.setBackground(new java.awt.Color(255, 255, 255));
        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("NAME");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 150, -1, 20));

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("INQUIRER INFORMATION");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 110, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
                                     
    // Get text from the fields
    String Name = namec.getText().trim();
    String Email = emailc.getText().trim();
    String Age = agec.getText().trim();
    String Gender = genderc.getText().trim();

    // Check if required fields are empty
    if (Name.isEmpty() || Email.isEmpty() || Age.isEmpty() || Gender.isEmpty()) {
        JOptionPane.showMessageDialog(this, "All fields are required!");
        return; // Exit the method if any field is empty
    }

    // Database connection and insert
    Connection con = null;
    PreparedStatement ps = null;
    try {
        // Establish connection
        Class.forName("com.mysql.cj.jdbc.Driver");
        con = DriverManager.getConnection("jdbc:mysql://localhost/databaseresort", "root", "");
        
        // Prepare the SQL query
        ps = con.prepareStatement("INSERT INTO clients(client_name, email, age, gender) VALUES (?, ?, ?, ?)");
        ps.setString(1, Name);
        ps.setString(2, Email);
        ps.setString(3, Age); 
        ps.setString(4, Gender);
        
        // Execute the query
        ps.executeUpdate();
        
        // Optionally show a success message
        JOptionPane.showMessageDialog(this, "Reservation made successfully!");

        // Clear the input fields after successful reservation
        namec.setText("");
        emailc.setText("");
        agec.setText("");
        genderc.setText("");

        // Update the table with the latest data from the database
        updateTableData();

    } catch (Exception ex) {
        JOptionPane.showMessageDialog(this, "An error occurred while saving data: " + ex.getMessage());
        Logger.getLogger(reservation_information.class.getName()).log(Level.SEVERE, null, ex);
    }

        
// TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed
    private void updateTableData() {
    // Clear the existing rows
    DefaultTableModel model = (DefaultTableModel) clients_table.getModel();
    model.setRowCount(0);  // Remove all rows from the table
    
    // Fetch the data from the database and add it to the table
    Connection con = null;
    PreparedStatement ps = null;
    ResultSet rs = null;
    try {
        // Establish connection
        con = DriverManager.getConnection("jdbc:mysql://localhost/databaseresort", "root", "");
        
        // Fetch the data from the 'clients' table
        ps = con.prepareStatement("SELECT client_name, email, age, gender FROM clients");
        rs = ps.executeQuery();
        
        // Populate the table with the fetched data
        while (rs.next()) {
            String name = rs.getString("client_name");
            String email = rs.getString("email");
            String age = rs.getString("age");
            String gender = rs.getString("gender");
            
            // Add a new row to the table
            model.addRow(new Object[] {name, email, age, gender});
        }
    } catch (Exception ex) {
        JOptionPane.showMessageDialog(this, "An error occurred while fetching data: " + ex.getMessage());
        Logger.getLogger(reservation_information.class.getName()).log(Level.SEVERE, null, ex);
    } finally {
        try {
            if (rs != null) rs.close();
            if (ps != null) ps.close();
            if (con != null) con.close();
        } catch (SQLException ex) {
            Logger.getLogger(reservation_information.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}

     public void loadData(){
    // Database connection and query execution
    Connection con = null;
    Statement stmt = null;
    ResultSet rs = null;
    DefaultTableModel model = (DefaultTableModel) clients_table.getModel(); // assuming your table is named `yourTable`
    
    try {
        // Establish connection
        Class.forName("com.mysql.cj.jdbc.Driver");
        con = DriverManager.getConnection("jdbc:mysql://localhost/databaseresort", "root", "");
        
        // Create and execute the SQL query
        stmt = con.createStatement();
        String query = "SELECT client_name, email, age, gender FROM clients";
        rs = stmt.executeQuery(query);
        
        // Clear the table before inserting new data
        model.setRowCount(0);
        
        // Process the result set and update the table
        while (rs.next()) {
            String name = rs.getString("client_name");
            String email = rs.getString("email");
            String age = rs.getString("age");
            String gender = rs.getString("gender");
            model.addRow(new Object[] { name, email, age, gender });
        }
        
    } catch (Exception ex) {
        JOptionPane.showMessageDialog(this, "An error occurred while fetching data: " + ex.getMessage());
        Logger.getLogger(reservation_information.class.getName()).log(Level.SEVERE, null, ex);
    } finally {
        try {
            if (rs != null) rs.close();
            if (stmt != null) stmt.close();
            if (con != null) con.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
 }
    private void emailcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailcActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailcActionPerformed

    private void agecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agecActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_agecActionPerformed

    private void gendercActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gendercActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_gendercActionPerformed

    private void namecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_namecActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_namecActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(reservation_information.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(reservation_information.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(reservation_information.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(reservation_information.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new reservation_information().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField agec;
    private javax.swing.JTable clients_table;
    private javax.swing.JTextField emailc;
    private javax.swing.JTextField genderc;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField namec;
    // End of variables declaration//GEN-END:variables
}
